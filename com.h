//
// Created by Joshua on 25/08/2021.
//

#ifndef COM_H
#define COM_H

#include "sam.h"


/**********************************************************************************************************************
 * GPIO
 **********************************************************************************************************************/


/**********************************************************************************************************************
 * Systick
 **********************************************************************************************************************/



/**********************************************************************************************************************
 * DAC
 **********************************************************************************************************************/


/**********************************************************************************************************************
 * SPI
 **********************************************************************************************************************/



/**********************************************************************************************************************
 * Sercom
 **********************************************************************************************************************/

typedef struct
{
	Sercom *hw;
	uint8_t apb_mask;
	uint8_t gclk_id;
} sercom_t_;

typedef sercom_t_ *sercom_t;

#define SAMD_SERCOM_DEFINE(n) \
usart_t_ SAMD_SERCOM ## n ## _ = \
{ \
	SERCOM ## n, \
	PM_APBCMASK_SERCOM ## n, \
	SERCOM ## n ## _GCLK_ID_CORE \
}; \
sercom_t SAMD_SERCOM ## n = &SAMD_SERCOM ## n ## _;

#ifdef SERCOM0
SAMD_SERCOM_DEFINE(0)
#endif
#ifdef SERCOM1
SAMD_SERCOM_DEFINE(1)
#endif
#ifdef SERCOM2
SAMD_SERCOM_DEFINE(2)
#endif
#ifdef SERCOM3
SAMD_SERCOM_DEFINE(3)
#endif
#ifdef SERCOM4
SAMD_SERCOM_DEFINE(4)
#endif
#ifdef SERCOM5
SAMD_SERCOM_DEFINE(5)
#endif

typedef struct
{
	uint8_t pin;
	uint8_t PMUXVal;
	uint8_t POVal;
} sercom_pin_t_;

typedef sercom_pin_t_ *sercom_pin_t;

/**********************************************************************************************************************
 * I2C Master
 **********************************************************************************************************************/



#endif //COM_H
